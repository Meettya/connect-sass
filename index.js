// Generated by CoffeeScript 1.6.2
(function() {
  var cmd, fibrous, fs, isSass, path, spawn,
    __slice = [].slice;

  spawn = require('child_process').spawn;

  path = require('path');

  fs = require('fs');

  fibrous = require('fibrous');

  cmd = function() {
    var args, cmd, future, ps, stderr, stdout;

    cmd = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    future = new fibrous.Future;
    ps = spawn(cmd, args);
    stdout = [];
    stderr = [];
    ps.stdout.on('data', function(chunk) {
      return stdout.push(chunk);
    });
    ps.stderr.on('data', function(chunk) {
      return stderr.push(chunk);
    });
    ps.on('exit', function(code) {
      var error;

      if (code === 0) {
        return future["return"](stdout.join(''));
      } else {
        error = new Error(stderr.join(''));
        return future["throw"](error);
      }
    });
    return future;
  };

  isSass = /\.(sass|scss)$/;

  exports.serve = function(filename) {
    var dirname, render, rendered;

    dirname = path.dirname(filename);
    render = function() {
      return cmd('sass', '--compass', filename);
    };
    rendered = render();
    fs.watch(dirname, {
      persistent: false
    }, function(ev, filename) {
      if (isSass.test(filename)) {
        return rendered = render();
      }
    });
    return function(req, res, next) {
      return rendered.resolve(function(err, result) {
        if (err != null) {
          return next();
        } else {
          return res.end(result);
        }
      });
    };
  };

}).call(this);

/*
//@ sourceMappingURL=index.map
*/
